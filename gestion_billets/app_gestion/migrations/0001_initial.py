# Generated by Django 5.2.3 on 2025-06-24 20:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Equipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('pays', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('role', models.CharField(choices=[('organisateur', 'Organisateur'), ('spectateur', 'Spectateur')], max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('heure', models.TimeField()),
                ('lieu', models.CharField(max_length=100)),
                ('prix_vip', models.DecimalField(decimal_places=2, max_digits=8)),
                ('prix_standard', models.DecimalField(decimal_places=2, max_digits=8)),
                ('description', models.TextField()),
                ('nb_places_dispo', models.IntegerField()),
                ('equipe1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipe1_matchs', to='app_gestion.equipe')),
                ('equipe2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipe2_matchs', to='app_gestion.equipe')),
                ('organisateur', models.ForeignKey(limit_choices_to={'role': 'organisateur'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_prenom', models.CharField(max_length=100)),
                ('numero', models.IntegerField()),
                ('nationalite', models.CharField(max_length=100)),
                ('equipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_gestion.equipe')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_reservation', models.DateField(auto_now_add=True)),
                ('heure', models.TimeField(auto_now_add=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('confirmée', 'Confirmée'), ('annulée', 'Annulée')], max_length=20)),
                ('nb_billets', models.IntegerField()),
                ('categorie', models.CharField(choices=[('VIP', 'VIP'), ('Standard', 'Standard')], max_length=20)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_gestion.match')),
                ('spectateur', models.ForeignKey(limit_choices_to={'role': 'spectateur'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_paiement', models.DateField(auto_now_add=True)),
                ('heure', models.TimeField(auto_now_add=True)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('statut', models.CharField(choices=[('effectué', 'Effectué'), ('échoué', 'Échoué'), ('en_attente', 'En attente')], max_length=20)),
                ('mode', models.CharField(choices=[('carte', 'Carte bancaire'), ('paypal', 'PayPal'), ('espece', 'Espèce')], max_length=20)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_gestion.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='Billet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('payé', 'Payé'), ('non_payé', 'Non payé')], default='non_payé', max_length=20)),
                ('chemin_pdf', models.CharField(max_length=255)),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_gestion.reservation')),
            ],
        ),
    ]
